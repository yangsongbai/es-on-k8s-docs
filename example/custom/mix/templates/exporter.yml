{{- if .Values.exporter.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-elastic-exporter
  labels:
    "app.kubernetes.io/instance": {{ .Release.Name }}
spec:
  replicas: {{ .Values.exporter.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      exporter-name: {{ .Release.Name }}-elastic-exporter
  template:
    metadata:
      labels:
        {{- include "export.labels" . | nindent 8 }}
    spec:
      {{- if .Values.docker }}
      imagePullSecrets:
        - name: {{ .Release.Name }}-image-secret
      {{- else }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
      - command:
        - /bin/sh
        - -c
        args:
          - sleep 15; PROBE_PASSWORD=$(cat /mnt/elasticsearch/elastic-internal-user/elastic-internal);/bin/elasticsearch_exporter --es.uri=http://elastic-internal:${PROBE_PASSWORD}@{{ .Release.Name }}-http.{{.Release.Namespace}}:9200 --es.all --es.indices
        image: "{{ .Values.repository }}/{{ .Values.exporter.image.name }}{{ .Values.imageSuffix }}:{{ .Values.exporter.image.tag | default .Chart.AppVersion }}"
        {{- with .Values.envs }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          capabilities:
            drop:
            - SETPCAP
            - MKNOD
            - AUDIT_WRITE
            - CHOWN
            - NET_RAW
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - SETGID
            - SETUID
            - NET_BIND_SERVICE
            - SYS_CHROOT
            - SETFCAP
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.exporter.containerPort }}
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: elastic-exporter
        ports:
        - containerPort: {{ .Values.exporter.containerPort }}
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.exporter.containerPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 10
        {{- with .Values.exporter.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
          - mountPath: /mnt/elasticsearch/elastic-internal-user
            name: elastic-internal-user
      restartPolicy: {{ .Values.exporter.image.restartPolicy }}
      volumes:
        - name: elastic-internal-user
          secret:
            defaultMode: 420
            items:
            - key: elastic-internal
              path: elastic-internal
            secretName:
              {{- if eq .Values.auth.authPluginName "jd-es-auth-plugin" }}
                {{ .Release.Name }}-jd-es-auth-plugin-realm
              {{- else }}
                {{ .Release.Name }}-internal-users
              {{- end}}
      securityContext:
        runAsNonRoot: true
        runAsGroup: 10000
        runAsUser: 10000
        fsGroup: 10000
      {{- with .Values.exporter.nodeSelectors }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.exporter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- with .Values.exporter.zones }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: topology.jdos.io/zone
                  operator: In
                  values:
                    {{- range $index, $value := . }}
                    - "{{ $value }}"
                    {{- end }}
      {{- end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  statefulset-name: {{ .Release.Name }}-elastic-exporter
              topologyKey: exporter-name
{{- end }}